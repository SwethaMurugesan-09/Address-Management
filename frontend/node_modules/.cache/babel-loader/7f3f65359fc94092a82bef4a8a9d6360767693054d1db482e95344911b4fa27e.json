{"ast":null,"code":"var _jsxFileName = \"D:\\\\Addressmanagement\\\\Address-Management\\\\frontend\\\\src\\\\components\\\\City.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getCities, addCity, updateCity, deleteCity, getStates, getCountries } from '../api'; // Add getCountries import\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst City = () => {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [states, setStates] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [newCityName, setNewCityName] = useState('');\n  const [newCityStateId, setNewCityStateId] = useState('');\n  const [newCityCountryId, setNewCityCountryId] = useState('');\n  const [editCityId, setEditCityId] = useState(null);\n  const [editCityName, setEditCityName] = useState('');\n  const [editCityStateId, setEditCityStateId] = useState('');\n  const [editCityCountryId, setEditCityCountryId] = useState('');\n  const [filteredCountryId, setFilteredCountryId] = useState('');\n  const [filteredStateId, setFilteredStateId] = useState('');\n  const containerRef = useRef(null); // Ref for the container\n\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const data = await getCities();\n        setCities(data);\n      } catch (error) {\n        console.error('Error fetching cities:', error);\n      }\n    };\n    const fetchStates = async () => {\n      try {\n        const data = await getStates();\n        setStates(data);\n      } catch (error) {\n        console.error('Error fetching states:', error);\n      }\n    };\n    const fetchCountries = async () => {\n      try {\n        const data = await getCountries(); // Fetch countries\n        setCountries(data);\n      } catch (error) {\n        console.error('Error fetching countries:', error);\n      }\n    };\n    fetchCities();\n    fetchStates();\n    fetchCountries(); // Fetch countries on mount\n  }, []);\n  const handleAddCity = async e => {\n    e.preventDefault();\n    try {\n      const newCity = await addCity(newCityName, newCityStateId);\n      setCities([...cities, newCity]);\n      setNewCityName('');\n      setNewCityStateId('');\n      setNewCityCountryId('');\n      scrollToTop(); // Scroll to top after adding city\n    } catch (error) {\n      console.error('Error adding city:', error);\n    }\n  };\n  const handleUpdateCity = async id => {\n    try {\n      const updatedCity = await updateCity(id, editCityName, editCityStateId);\n      setCities(cities.map(city => city._id === id ? updatedCity : city));\n      setEditCityId(null);\n      setEditCityName('');\n      setEditCityStateId('');\n      setEditCityCountryId('');\n      scrollToTop(); // Scroll to top after updating city\n    } catch (error) {\n      console.error('Error updating city:', error);\n    }\n  };\n  const handleDeleteCity = async id => {\n    try {\n      await deleteCity(id);\n      setCities(cities.filter(city => city._id !== id));\n    } catch (error) {\n      console.error('Error deleting city:', error);\n    }\n  };\n  const getStateName = stateId => {\n    const state = states.find(state => state._id === stateId);\n    return state ? state.name : '';\n  };\n  const handleFilterByCountry = countryId => {\n    setFilteredCountryId(countryId);\n    setFilteredStateId(''); // Clear state filter when country changes\n  };\n  const handleFilterByState = stateId => {\n    setFilteredStateId(stateId);\n  };\n  const clearFilter = () => {\n    setFilteredCountryId('');\n    setFilteredStateId('');\n  };\n  const filteredStates = filteredCountryId ? states.filter(state => state.countryId === filteredCountryId) : states;\n  const filteredCities = filteredStateId ? cities.filter(city => city.stateId === filteredStateId) : cities;\n  const scrollToTop = () => {\n    containerRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .container {\n          max-width: 700px;\n          margin: 20px auto;\n          padding: 20px;\n          background-color: #fff;\n          border-radius: 4px;\n          box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n        }\n\n        h2 {\n          text-align: center;\n          color: #333;\n          margin-bottom: 20px;\n        }\n\n        .filter-container {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 20px;\n        }\n\n        .filter-container select {\n          padding: 10px;\n          border: 1px solid #ccc;\n          border-radius: 4px;\n          flex-grow: 1;\n          margin-right: 10px;\n        }\n\n        .filter-container button {\n          padding: 10px 20px;\n          background-color: #007bff;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n        }\n\n        .filter-container button:hover {\n          background-color: #0056b3;\n        }\n\n        form {\n          display: flex;\n          flex-direction: column;\n          margin-bottom: 20px;\n        }\n\n        form input[type=\"text\"],\n        form select {\n          padding: 10px;\n          border: 1px solid #ccc;\n          border-radius: 4px;\n          margin-bottom: 10px;\n        }\n\n        form button {\n          padding: 10px 20px;\n          background-color: #28a745;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n        }\n\n        form button:hover {\n          background-color: #218838;\n        }\n\n        ul {\n          max-height: 400px;\n          overflow-y: auto;\n          list-style: none;\n          padding: 0;\n        }\n\n        li {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 10px;\n          background-color: #f8f9fa;\n          border: 1px solid #ddd;\n          border-radius: 4px;\n          margin-bottom: 10px;\n        }\n\n        li:nth-child(even) {\n          background-color: #e9ecef;\n        }\n\n        button {\n          padding: 5px 10px;\n          margin-left: 5px;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n        }\n\n        .edit-button {\n          background-color: #007bff;\n          color: white;\n          margin-right: 20px;\n        }\n\n        .edit-button:hover {\n          background-color: #0056b3;\n        }\n\n        .delete-button {\n          background-color: #dc3545;\n          color: white;\n        }\n\n        .delete-button:hover {\n          background-color: #c82333;\n        }\n\n        .edit-container {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          width: 100%;\n        }\n\n        .edit-container input,\n        .edit-container select {\n          margin-right: 10px;\n          flex: 1;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: filteredCountryId,\n        onChange: e => handleFilterByCountry(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Countries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country._id,\n          children: country.name\n        }, country._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filteredStateId,\n        onChange: e => handleFilterByState(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All States\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), filteredStates.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state._id,\n          children: state.name\n        }, state._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), (filteredCountryId || filteredStateId) && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearFilter,\n        children: \"Clear Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddCity,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newCityName,\n          onChange: e => setNewCityName(e.target.value),\n          placeholder: \"Add new city\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newCityCountryId,\n          onChange: e => setNewCityCountryId(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: country._id,\n            children: country.name\n          }, country._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newCityStateId,\n          onChange: e => setNewCityStateId(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), states.filter(state => state.countryId === newCityCountryId).map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: state._id,\n            children: state.name\n          }, state._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredCities.map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: editCityId === city._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editCityName,\n            onChange: e => setEditCityName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editCityCountryId,\n            onChange: e => {\n              setEditCityCountryId(e.target.value);\n              setEditCityStateId(''); // Clear state selection when country changes\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country._id,\n              children: country.name\n            }, country._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editCityStateId,\n            onChange: e => setEditCityStateId(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 19\n            }, this), states.filter(state => state.countryId === editCityCountryId).map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: state._id,\n              children: state.name\n            }, state._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: () => handleUpdateCity(city._id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => setEditCityId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [city.name, \" - \", getStateName(city.stateId), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-button\",\n              onClick: () => {\n                setEditCityId(city._id);\n                setEditCityName(city.name);\n                setEditCityCountryId(city.countryId);\n                setEditCityStateId(city.stateId);\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => handleDeleteCity(city._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, city._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(City, \"H843kkB8+mjAA6BxuQpnkifP5Ig=\");\n_c = City;\nexport default City;\nvar _c;\n$RefreshReg$(_c, \"City\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getCities","addCity","updateCity","deleteCity","getStates","getCountries","jsxDEV","_jsxDEV","Fragment","_Fragment","City","_s","cities","setCities","states","setStates","countries","setCountries","newCityName","setNewCityName","newCityStateId","setNewCityStateId","newCityCountryId","setNewCityCountryId","editCityId","setEditCityId","editCityName","setEditCityName","editCityStateId","setEditCityStateId","editCityCountryId","setEditCityCountryId","filteredCountryId","setFilteredCountryId","filteredStateId","setFilteredStateId","containerRef","fetchCities","data","error","console","fetchStates","fetchCountries","handleAddCity","e","preventDefault","newCity","scrollToTop","handleUpdateCity","id","updatedCity","map","city","_id","handleDeleteCity","filter","getStateName","stateId","state","find","name","handleFilterByCountry","countryId","handleFilterByState","clearFilter","filteredStates","filteredCities","current","scrollIntoView","behavior","ref","className","children","jsx","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","country","onClick","onSubmit","style","display","marginBottom","type","placeholder","required","_c","$RefreshReg$"],"sources":["D:/Addressmanagement/Address-Management/frontend/src/components/City.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { getCities, addCity, updateCity, deleteCity, getStates, getCountries } from '../api'; // Add getCountries import\r\n\r\nconst City = () => {\r\n  const [cities, setCities] = useState([]);\r\n  const [states, setStates] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [newCityName, setNewCityName] = useState('');\r\n  const [newCityStateId, setNewCityStateId] = useState('');\r\n  const [newCityCountryId, setNewCityCountryId] = useState('');\r\n  const [editCityId, setEditCityId] = useState(null);\r\n  const [editCityName, setEditCityName] = useState('');\r\n  const [editCityStateId, setEditCityStateId] = useState('');\r\n  const [editCityCountryId, setEditCityCountryId] = useState('');\r\n  const [filteredCountryId, setFilteredCountryId] = useState('');\r\n  const [filteredStateId, setFilteredStateId] = useState('');\r\n  const containerRef = useRef(null); // Ref for the container\r\n\r\n  useEffect(() => {\r\n    const fetchCities = async () => {\r\n      try {\r\n        const data = await getCities();\r\n        setCities(data);\r\n      } catch (error) {\r\n        console.error('Error fetching cities:', error);\r\n      }\r\n    };\r\n\r\n    const fetchStates = async () => {\r\n      try {\r\n        const data = await getStates();\r\n        setStates(data);\r\n      } catch (error) {\r\n        console.error('Error fetching states:', error);\r\n      }\r\n    };\r\n\r\n    const fetchCountries = async () => {\r\n      try {\r\n        const data = await getCountries(); // Fetch countries\r\n        setCountries(data);\r\n      } catch (error) {\r\n        console.error('Error fetching countries:', error);\r\n      }\r\n    };\r\n\r\n    fetchCities();\r\n    fetchStates();\r\n    fetchCountries(); // Fetch countries on mount\r\n  }, []);\r\n\r\n  const handleAddCity = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const newCity = await addCity(newCityName, newCityStateId);\r\n      setCities([...cities, newCity]);\r\n      setNewCityName('');\r\n      setNewCityStateId('');\r\n      setNewCityCountryId('');\r\n      scrollToTop(); // Scroll to top after adding city\r\n    } catch (error) {\r\n      console.error('Error adding city:', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateCity = async (id) => {\r\n    try {\r\n      const updatedCity = await updateCity(id, editCityName, editCityStateId);\r\n      setCities(cities.map(city => (city._id === id ? updatedCity : city)));\r\n      setEditCityId(null);\r\n      setEditCityName('');\r\n      setEditCityStateId('');\r\n      setEditCityCountryId('');\r\n      scrollToTop(); // Scroll to top after updating city\r\n    } catch (error) {\r\n      console.error('Error updating city:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCity = async (id) => {\r\n    try {\r\n      await deleteCity(id);\r\n      setCities(cities.filter(city => city._id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting city:', error);\r\n    }\r\n  };\r\n\r\n  const getStateName = (stateId) => {\r\n    const state = states.find(state => state._id === stateId);\r\n    return state ? state.name : '';\r\n  };\r\n\r\n  const handleFilterByCountry = (countryId) => {\r\n    setFilteredCountryId(countryId);\r\n    setFilteredStateId(''); // Clear state filter when country changes\r\n  };\r\n\r\n  const handleFilterByState = (stateId) => {\r\n    setFilteredStateId(stateId);\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setFilteredCountryId('');\r\n    setFilteredStateId('');\r\n  };\r\n\r\n  const filteredStates = filteredCountryId ? states.filter(state => state.countryId === filteredCountryId) : states;\r\n  const filteredCities = filteredStateId ? cities.filter(city => city.stateId === filteredStateId) : cities;\r\n\r\n  const scrollToTop = () => {\r\n    containerRef.current.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef} className=\"container\">\r\n      <style jsx>{`\r\n        .container {\r\n          max-width: 700px;\r\n          margin: 20px auto;\r\n          padding: 20px;\r\n          background-color: #fff;\r\n          border-radius: 4px;\r\n          box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        h2 {\r\n          text-align: center;\r\n          color: #333;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        .filter-container {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        .filter-container select {\r\n          padding: 10px;\r\n          border: 1px solid #ccc;\r\n          border-radius: 4px;\r\n          flex-grow: 1;\r\n          margin-right: 10px;\r\n        }\r\n\r\n        .filter-container button {\r\n          padding: 10px 20px;\r\n          background-color: #007bff;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s ease;\r\n        }\r\n\r\n        .filter-container button:hover {\r\n          background-color: #0056b3;\r\n        }\r\n\r\n        form {\r\n          display: flex;\r\n          flex-direction: column;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        form input[type=\"text\"],\r\n        form select {\r\n          padding: 10px;\r\n          border: 1px solid #ccc;\r\n          border-radius: 4px;\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        form button {\r\n          padding: 10px 20px;\r\n          background-color: #28a745;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s ease;\r\n        }\r\n\r\n        form button:hover {\r\n          background-color: #218838;\r\n        }\r\n\r\n        ul {\r\n          max-height: 400px;\r\n          overflow-y: auto;\r\n          list-style: none;\r\n          padding: 0;\r\n        }\r\n\r\n        li {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          padding: 10px;\r\n          background-color: #f8f9fa;\r\n          border: 1px solid #ddd;\r\n          border-radius: 4px;\r\n          margin-bottom: 10px;\r\n        }\r\n\r\n        li:nth-child(even) {\r\n          background-color: #e9ecef;\r\n        }\r\n\r\n        button {\r\n          padding: 5px 10px;\r\n          margin-left: 5px;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s ease;\r\n        }\r\n\r\n        .edit-button {\r\n          background-color: #007bff;\r\n          color: white;\r\n          margin-right: 20px;\r\n        }\r\n\r\n        .edit-button:hover {\r\n          background-color: #0056b3;\r\n        }\r\n\r\n        .delete-button {\r\n          background-color: #dc3545;\r\n          color: white;\r\n        }\r\n\r\n        .delete-button:hover {\r\n          background-color: #c82333;\r\n        }\r\n\r\n        .edit-container {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          align-items: center;\r\n          width: 100%;\r\n        }\r\n\r\n        .edit-container input,\r\n        .edit-container select {\r\n          margin-right: 10px;\r\n          flex: 1;\r\n        }\r\n      `}</style>\r\n\r\n      <h2>Cities</h2>\r\n\r\n      <div className=\"filter-container\">\r\n        <select value={filteredCountryId} onChange={(e) => handleFilterByCountry(e.target.value)}>\r\n          <option value=\"\">All Countries</option>\r\n          {countries.map(country => (\r\n            <option key={country._id} value={country._id}>{country.name}</option>\r\n          ))}\r\n        </select>\r\n        <select value={filteredStateId} onChange={(e) => handleFilterByState(e.target.value)}>\r\n          <option value=\"\">All States</option>\r\n          {filteredStates.map(state => (\r\n            <option key={state._id} value={state._id}>{state.name}</option>\r\n          ))}\r\n        </select>\r\n        {(filteredCountryId || filteredStateId) && (\r\n          <button onClick={clearFilter}>Clear Filter</button>\r\n        )}\r\n      </div>\r\n\r\n      <form onSubmit={handleAddCity}>\r\n        <div style={{ display: 'flex', marginBottom: '10px' }}>\r\n          <input\r\n            type=\"text\"\r\n            value={newCityName}\r\n            onChange={(e) => setNewCityName(e.target.value)}\r\n            placeholder=\"Add new city\"\r\n            required\r\n          />\r\n          <select value={newCityCountryId} onChange={(e) => setNewCityCountryId(e.target.value)} required>\r\n            <option value=\"\">Select Country</option>\r\n            {countries.map(country => (\r\n              <option key={country._id} value={country._id}>{country.name}</option>\r\n            ))}\r\n          </select>\r\n          <select value={newCityStateId} onChange={(e) => setNewCityStateId(e.target.value)} required>\r\n            <option value=\"\">Select State</option>\r\n            {states.filter(state => state.countryId === newCityCountryId).map(state => (\r\n              <option key={state._id} value={state._id}>{state.name}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\">Add City</button>\r\n      </form>\r\n\r\n      <ul>\r\n        {filteredCities.map(city => (\r\n          <li key={city._id}>\r\n            {editCityId === city._id ? (\r\n              <div className=\"edit-container\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={editCityName}\r\n                  onChange={(e) => setEditCityName(e.target.value)}\r\n                />\r\n                <select\r\n                  value={editCityCountryId}\r\n                  onChange={(e) => {\r\n                    setEditCityCountryId(e.target.value);\r\n                    setEditCityStateId(''); // Clear state selection when country changes\r\n                  }}\r\n                >\r\n                  <option value=\"\">Select Country</option>\r\n                  {countries.map(country => (\r\n                    <option key={country._id} value={country._id}>{country.name}</option>\r\n                  ))}\r\n                </select>\r\n                <select\r\n                  value={editCityStateId}\r\n                  onChange={(e) => setEditCityStateId(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select State</option>\r\n                  {states.filter(state => state.countryId === editCityCountryId).map(state => (\r\n                    <option key={state._id} value={state._id}>{state.name}</option>\r\n                  ))}\r\n                </select>\r\n                <button className=\"edit-button\" onClick={() => handleUpdateCity(city._id)}>Save</button>\r\n                <button className=\"delete-button\" onClick={() => setEditCityId(null)}>Cancel</button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {city.name} - {getStateName(city.stateId)}\r\n                <div>\r\n                  <button className=\"edit-button\" onClick={() => {\r\n                    setEditCityId(city._id);\r\n                    setEditCityName(city.name);\r\n                    setEditCityCountryId(city.countryId);\r\n                    setEditCityStateId(city.stateId);\r\n                  }}>Edit</button>\r\n                  <button className=\"delete-button\" onClick={() => handleDeleteCity(city._id)}>Delete</button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default City;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}